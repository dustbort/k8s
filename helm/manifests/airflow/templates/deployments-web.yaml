---
# Source: airflow/templates/deployments-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow
    component: web
    chart: airflow-4.8.0
    release: airflow
    heritage: Helm
spec:
  replicas: 1
  minReadySeconds: 120
  strategy:
    # Smooth rolling update of the Web UI
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: airflow
      component: web
      release: airflow
  template:
    metadata:
      annotations:
        checksum/config-env: 4804e4034ae31c0b055a70c35b24395bae00620372cba151a3a54764381cf4ab
        checksum/config-git-clone: dfdcaa5e647452d73cea2feea6f8ff62ae2f960c57fdaacf9f360bc12ca9010b
        checksum/config-scripts: 26a6f1e7cec265ed602d3b7b9d556da5fb09a882a91f1e1f8793eed2e523cf2b
        checksum/dags-git-ref: master
      labels:
        app: airflow
        component: web
        release: airflow
    spec:
      restartPolicy: Always
      initContainers:
        - name: git-clone
          image: alpine/git:1.0.7 # Any image with git will do
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: "airflow-env"
          env:          
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-redis
                  key: redis-password
          command:
            - /usr/local/git/git-clone.sh
          args:
            - "git@github.com:dustbort/airflow-dags-gitops.git"
            - "master"
            - "/dags"
          volumeMounts:
            - name: git-clone
              mountPath: /usr/local/git
            - name: dags-data
              mountPath: /dags
            - name: git-clone-secret
              mountPath: /keys
      containers:
        - name: airflow-web
          image: datarods/docker-airflow:1.10.4-2
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: "airflow-env"
          env:          
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-redis
                  key: redis-password
          resources:
            {}
          volumeMounts:
            - name: scripts
              mountPath: /usr/local/scripts
            - name: dags-data
              mountPath: /usr/local/airflow/dags
          args:
            - "bash"
            - "-c"
            - >
              echo 'waiting 60s...' &&
              sleep 60 &&
              echo 'installing requirements...' &&
              mkdir -p /usr/local/airflow/.local/bin &&
              export PATH=/usr/local/airflow/.local/bin:$PATH &&
              /usr/local/scripts/install-requirements.sh &&
              echo 'executing webserver...' &&
              airflow webserver
          livenessProbe:
            httpGet:
              path: "/health"
              port: web
            ## Keep 6 minutes the delay to allow clean wait of postgres and redis containers
            initialDelaySeconds: 360
            periodSeconds: 60
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5

          readinessProbe:
            httpGet:
              path: "/health"
              port: web
            initialDelaySeconds: 360
            periodSeconds: 60
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
      volumes:
        - name: scripts
          configMap:
            name: airflow-scripts
            defaultMode: 0755
        - name: dags-data
          emptyDir: {}
        - name: git-clone
          configMap:
            name: airflow-git-clone
            defaultMode: 0755
        - name: git-clone-secret
          secret:
            secretName: airflow-github-secrets
            defaultMode: 0700
